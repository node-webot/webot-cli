#!/usr/bin/env node

var program = require('commander');
var path = require('path');
var nopt = require('nopt');
var webot = require('../lib');

program
  .version(require(path.join(__dirname, '..', 'package.json')).version)
  .usage('<command> [options]');
  //.option('-t, --token [value]', 'Provide weixin token, defaults to process.env.WX_TOKEN or keyboardcat123')
  //.option('-n, --host [value]', 'Set request hostname, defaults to 127.0.0.1', '127.0.0.1')
  //.option('-p, --port <n>', 'The port your service is listening to, defaults to 3000', 3000)
  //.option('-r, --route <n>', 'The route path, defaults to /', '')
  //.option('-d, --destination [value]', 'The request destination url, will override "host", "port" and "route"')
  //.option('-s, --sp [value]', 'The SP ID, defaults to webot', 'webot')
  //.option('-u, --user [value]', 'The User ID defaults to client', 'client');

program.on('--help', function(cmd) {
  if (cmd && cmd.helpInfo) {
    if (typeof cmd.helpInfo === 'function') {
      cmd.helpInfo();
    } else {
      console.log(cmd.helpInfo);
    }
  } else {
    process.stdout.write(program.helpInformation());
    console.log('  Commands:');
    console.log();
    console.log('    send [image|text|loc|..]   send a message to test host');
    console.log('    menu [create|delete|get]   manipulate wechat menu');
    console.log('    help [command]             view help info for specified command');
    console.log();
  }
  process.exit();
});

var args = process.argv.slice();

program.parse(process.argv);

var cmd = program.args[0];

if (cmd === 'help') {
  cmd = program.args[1];
  program.emit('--help', cmd && webot.commands[cmd]);
  return;
}
cmd = cmd && webot.commands[cmd];

if (!cmd) {
  program.emit('--help', cmd);
  return;
}

// use nopt to parse remaining arguments
var opts = nopt(cmd.knowOpts, cmd.shortHands, args, 3);

if (opts.help) {
  program.emit('--help', cmd);
  return;
}
cmd(opts);

/* vim: set ft=javascript : */
